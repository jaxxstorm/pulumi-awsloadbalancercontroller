version: '3'

vars:
  VERSION: 0.0.1
  PACK: awsloadbalancercontroller
  PROJECT: github.com/jaxxstorm/pulumi-{{ .PACK }}
  PROVIDER: pulumi-resource-{{ .PACK }}
  CODEGEN: pulumi-gen-{{ .PACK }}
  VERSION_PATH: provider/pkg/version.Version
  WORKING_DIR:
    sh: pwd
  SCHEMA_PATH: "{{ .WORKING_DIR }}/provider/cmd/{{ .PROVIDER }}/schema.json"


tasks:
  build:
    desc: "Build providers and all SDKs"
    cmds:
      - task: generate:sdks
      - task: build:sdks

  generate:python:
    desc: "Generate python SDK"
    cmds:
      - rm -rf sdk/python
      - cd provider/cmd/{{ .CODEGEN }} && go run . python ../../../sdk/python {{ .SCHEMA_PATH }}
      - cp {{ .WORKING_DIR }}/README.md sdk/python

  generate:nodejs:
    desc: "Generate NodeJS SDK"
    cmds:
      - rm -rf sdk/nodejs
      - cd provider/cmd/{{ .CODEGEN }} && go run . nodejs ../../../sdk/nodejs {{ .SCHEMA_PATH }}

  generate:go:
    desc: "Generate Go SDK"
    cmds:
      - rm -rf sdk/go
      - cd provider/cmd/{{ .CODEGEN }} && go run . go ../../../sdk/go {{ .SCHEMA_PATH }}

  generate:sdks:
    desc: "Generate all SDKs"
    cmds:
      - task: generate:python
      - task: generate:nodejs

  build:provider:
    desc: Build the provider binary
    vars:
      VERSION:
        sh: pulumictl get version -r {{ .WORKING_DIR }}
    cmds:
      - rm -rf {{ .WORKING_DIR }}/bin/{{ .PROVIDER }}
      - cd provider/cmd/{{ .PROVIDER }} && go build -a -o {{ .WORKING_DIR }}/bin/{{ .PROVIDER }} -ldflags "-X {{ .PROJECT }}/{{ .VERSION_PATH }}={{ .VERSION }}" .

  build:nodejs:
    desc: "Build the NodeJS SDK"
    dir: sdk/nodejs
    vars:
      VERSION:
        sh: pulumictl get version -r {{ .WORKING_DIR }} -p javascript
    cmds:
      - task: generate:nodejs
      - yarn install
      - yarn run tsc --version
      - yarn run tsc
      - cp ../../README.md ../../LICENSE package.json yarn.lock ./bin/
      - sed -i.bak -e "s/\${VERSION}/{{ .VERSION }}/g" ./bin/package.json
      - rm ./bin/package.json.bak

  build:python:
    desc: "Build the Python SDK"
    dir: sdk/python
    vars:
      VERSION:
        sh: pulumictl get version -r {{ .WORKING_DIR }} -p python
    cmds:
      - task: generate:python
      - python3 setup.py clean --all 2>/dev/null
      - rm -rf ./bin/ ../python.bin/ 
      - cp -R . ../python.bin 
      - mv ../python.bin ./bin
      - sed -i.bak -e "s/\$${VERSION}/${PYPI_VERSION}/g" -e "s/\$${PLUGIN_VERSION}/${VERSION}/g" ./bin/setup.py
      - rm ./bin/setup.py.bak
      - cd ./bin && python3 setup.py build sdist

  build:dotnet:
    desc: "Build dotnet SDK"
    dir: sdk/dotnet
    vars:
      VERSION:
        sh: pulumictl get version -r {{ .WORKING_DIR }} -p dotnet
    cmds:
      - echo "Not implemented"
  
  build:go:
    desc: "Build Go SDK"
    dir: sdk/go
    cmds:
      - task: generate:go

  build:sdks:
    desc: "Build all SDKs"
    cmds:
      - task: build:python
      - task: build:nodejs


